useDynLib(indexing)

export(
  .IndexEnv,
  indexenv,

  createIndex,
  createData,
  loadIndex,
  loadHIndex,
  loadData,
  searchIndex,

  "%r%",
  qsubset,

  ## dimnames and dim to simulate rectangular
  dimnames.indexed_db,
  dim.indexed_db,
  partitions
)

export(
  is.bitmap,
  as.rowid
)

export(
  # general utility functions

  localtime,

  # fast sequential binary file read with `[` method
  seqfile
)

S3method(as.rowid, rowid)
S3method(as.rowid, bitmap)
S3method(as.rowid, list)
S3method(as.rowid, default)

S3method('[<-', bitmap)

S3method('[', seqfile)
S3method(print, seqfile)

S3method('[', dfactor)
S3method(print, dfactor)

S3method(createIndex.mmap, integer)
S3method(createIndex.mmap, double)
S3method(createIndex.mmap, character)

S3method("<",  "indexed")
S3method("<=", "indexed")
S3method(">",  "indexed")
S3method(">=", "indexed")
S3method("==", "indexed")
S3method("!=", "indexed")
S3method("%r%", "indexed")
S3method("%r%", "numeric")
S3method("%r%", "mmap")

S3method(length, "indexed")
S3method(seq, "indexed_list")

S3method(subset, "indexed_db")

# indexed_posixct
S3method(Ops, "indexed_posixct")

# indexed_date
S3method("==", "indexed_date")

S3method("[", "indexed_db")

S3method("&", "rowid")
S3method("|", "rowid")

S3method(print, indexed_db)
S3method(print, rowid)
